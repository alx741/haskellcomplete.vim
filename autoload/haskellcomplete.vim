" Vim completion script
" Language:        Haskell
" Original Author: Daniel Campoverde <alx@sillybytes.net>
" URL:             https://github.com/alx741/haskellcomplete.vim
" Last Change:     2018 Aug 26

" Language extensions from:
"   https://hackage.haskell.org/package/Cabal-2.2.0.1/docs/Language-Haskell-Extension.html


let b:completingLangExtension = 0

function! haskellcomplete#Complete(findstart, base)
    if a:findstart
        let l:line = getline('.')
        let l:start = col('.') - 1

        if l:line =~ '^\s*{-#\s*LANGUAGE.*'
            while l:start >= 0 && l:line[l:start - 1] !~ '[, ]'
                let l:start -= 1
            endwhile
            let b:completingLangExtension = 1
            return l:start
        endif

        return start
    endif

    if b:completingLangExtension
        if a:base ==? ""
            " Return all posible Lang extensions
            return s:langExtensions
        else
            let l:matches = []
            for extension in s:langExtensions
                if extension =~? a:base
                    call add(l:matches, extension)
                endif
            endfor
            return l:matches
        endif
    endif

    return -1
endfunction

let s:langExtensions =
    \ [ "OverlappingInstances"
    \ , "UndecidableInstances"
    \ , "IncoherentInstances"
    \ , "DoRec"
    \ , "RecursiveDo"
    \ , "ParallelListComp"
    \ , "MultiParamTypeClasses"
    \ , "MonomorphismRestriction"
    \ , "FunctionalDependencies"
    \ , "Rank2Types"
    \ , "RankNTypes"
    \ , "PolymorphicComponents"
    \ , "ExistentialQuantification"
    \ , "ScopedTypeVariables"
    \ , "PatternSignatures"
    \ , "ImplicitParams"
    \ , "FlexibleContexts"
    \ , "FlexibleInstances"
    \ , "EmptyDataDecls"
    \ , "CPP"
    \ , "KindSignatures"
    \ , "BangPatterns"
    \ , "TypeSynonymInstances"
    \ , "TemplateHaskell"
    \ , "ForeignFunctionInterface"
    \ , "Arrows"
    \ , "Generics"
    \ , "ImplicitPrelude"
    \ , "NamedFieldPuns"
    \ , "PatternGuards"
    \ , "GeneralizedNewtypeDeriving"
    \ , "ExtensibleRecords"
    \ , "RestrictedTypeSynonyms"
    \ , "HereDocuments"
    \ , "MagicHash"
    \ , "TypeFamilies"
    \ , "StandaloneDeriving"
    \ , "UnicodeSyntax"
    \ , "UnliftedFFITypes"
    \ , "InterruptibleFFI"
    \ , "CApiFFI"
    \ , "LiberalTypeSynonyms"
    \ , "TypeOperators"
    \ , "RecordWildCards"
    \ , "RecordPuns"
    \ , "DisambiguateRecordFields"
    \ , "TraditionalRecordSyntax"
    \ , "OverloadedStrings"
    \ , "GADTs"
    \ , "GADTSyntax"
    \ , "MonoPatBinds"
    \ , "RelaxedPolyRec"
    \ , "ExtendedDefaultRules"
    \ , "UnboxedTuples"
    \ , "DeriveDataTypeable"
    \ , "DeriveGeneric"
    \ , "DefaultSignatures"
    \ , "InstanceSigs"
    \ , "ConstrainedClassMethods"
    \ , "PackageImports"
    \ , "ImpredicativeTypes"
    \ , "NewQualifiedOperators"
    \ , "PostfixOperators"
    \ , "QuasiQuotes"
    \ , "TransformListComp"
    \ , "MonadComprehensions"
    \ , "ViewPatterns"
    \ , "XmlSyntax"
    \ , "RegularPatterns"
    \ , "TupleSections"
    \ , "GHCForeignImportPrim"
    \ , "NPlusKPatterns"
    \ , "DoAndIfThenElse"
    \ , "MultiWayIf"
    \ , "LambdaCase"
    \ , "RebindableSyntax"
    \ , "ExplicitForAll"
    \ , "DatatypeContexts"
    \ , "MonoLocalBinds"
    \ , "DeriveFunctor"
    \ , "DeriveTraversable"
    \ , "DeriveFoldable"
    \ , "NondecreasingIndentation"
    \ , "SafeImports"
    \ , "Safe"
    \ , "Trustworthy"
    \ , "Unsafe"
    \ , "ConstraintKinds"
    \ , "PolyKinds"
    \ , "DataKinds"
    \ , "ParallelArrays"
    \ , "RoleAnnotations"
    \ , "OverloadedLists"
    \ , "EmptyCase"
    \ , "AutoDeriveTypeable"
    \ , "NegativeLiterals"
    \ , "BinaryLiterals"
    \ , "NumDecimals"
    \ , "NullaryTypeClasses"
    \ , "ExplicitNamespaces"
    \ , "AllowAmbiguousTypes"
    \ , "JavaScriptFFI"
    \ , "PatternSynonyms"
    \ , "PartialTypeSignatures"
    \ , "NamedWildCards"
    \ , "DeriveAnyClass"
    \ , "DeriveLift"
    \ , "StaticPointers"
    \ , "StrictData"
    \ , "Strict"
    \ , "ApplicativeDo"
    \ , "DuplicateRecordFields"
    \ , "TypeApplications"
    \ , "TypeInType"
    \ , "UndecidableSuperClasses"
    \ , "MonadFailDesugaring"
    \ , "TemplateHaskellQuotes"
    \ , "OverloadedLabels"
    \ , "TypeFamilyDependencies"
    \ , "DerivingStrategies"
    \ , "UnboxedSums"
    \ , "HexFloatLiterals"
    \ ]

let s:optionsGHC =
    \ [ "-n"
    \ , "-v"
    \ , "-vn"
    \ , "-c"
    \ , "-hcsuf"
    \ , "-hidir"
    \ , "-hisuf"
    \ , "-o"
    \ , "-odir"
    \ , "-ohi"
    \ , "-osuf"
    \ , "-stubdir"
    \ , "-outputdir"
    \ , "-keep-hc-file"
    \ , "-keep-llvm-file"
    \ , "-keep-s-file"
    \ , "-keep-raw-s-file"
    \ , "-keep-tmp-files"
    \ , "-tmpdir"
    \ , "-ddump-hi"
    \ , "-ddump-hi-diffs"
    \ , "-ddump-minimal-imports"
    \ , "-fforce-recomp"
    \ , "-fno-force-recomp"
    \ , "-fbreak-on-exception"
    \ , "-fno-break-on-exception"
    \ , "-fbreak-on-error"
    \ , "-fno-break-on-error"
    \ , "-fprint-evld-with-show"
    \ , "-fno-print-evld-with-show"
    \ , "-fprint-bind-result"
    \ , "-fno-print-bind-result"
    \ , "-fno-print-bind-contents"
    \ , "-fno-implicit-import-qualified"
    \ , "-package-name"
    \ , "-no-auto-link-packages"
    \ , "-fglasgow-exts"
    \ , "-fno-glasgow-exts"
    \ , "-XOverlappingInstances"
    \ , "-XNoOverlappingInstances"
    \ , "-XIncoherentInstances"
    \ , "-XNoIncoherentInstances"
    \ , "-XUndecidableInstances"
    \ , "-XNoUndecidableInstances"
    \ , "-fcontext-stack=Nn"
    \ , "-XArrows"
    \ , "-XNoArrows"
    \ , "-XDisambiguateRecordFields"
    \ , "-XNoDisambiguateRecordFields"
    \ , "-XForeignFunctionInterface"
    \ , "-XNoForeignFunctionInterface"
    \ , "-XGenerics"
    \ , "-XNoGenerics"
    \ , "-XImplicitParams"
    \ , "-XNoImplicitParams"
    \ , "-firrefutable-tuples"
    \ , "-fno-irrefutable-tuples"
    \ , "-XNoImplicitPrelude"
    \ , "-XImplicitPrelude"
    \ , "-XRebindableSyntax"
    \ , "-XNoRebindableSyntax"
    \ , "-XNoMonomorphismRestriction"
    \ , "-XMonomorphismRrestriction"
    \ , "-XNoNPlusKPatterns"
    \ , "-XNPlusKPatterns"
    \ , "-XNoMonoPatBinds"
    \ , "-XMonoPatBinds"
    \ , "-XRelaxedPolyRec"
    \ , "-XNoRelaxedPolyRec"
    \ , "-XExtendedDefaultRules"
    \ , "-XNoExtendedDefaultRules"
    \ , "-XOverloadedStrings"
    \ , "-XNoOverloadedStrings"
    \ , "-XGADTs"
    \ , "-XNoGADTs"
    \ , "-XTypeFamilies"
    \ , "-XNoTypeFamilies"
    \ , "-XScopedTypeVariables"
    \ , "-XNoScopedTypeVariables"
    \ , "-XMonoLocalBinds"
    \ , "-XNoMonoLocalBinds"
    \ , "-XTemplateHaskell"
    \ , "-XNoTemplateHaskell"
    \ , "-XQuasiQuotes"
    \ , "-XNoQuasiQuotes"
    \ , "-XBangPatterns"
    \ , "-XNoBangPatterns"
    \ , "-XCPP"
    \ , "-XNoCPP"
    \ , "-XPatternGuards"
    \ , "-XNoPatternGuards"
    \ , "-XViewPatterns"
    \ , "-XNoViewPatterns"
    \ , "-XUnicodeSyntax"
    \ , "-XNoUnicodeSyntax"
    \ , "-XMagicHash"
    \ , "-XNoMagicHash"
    \ , "-XNewQualifiedOperators"
    \ , "-XNoNewQualifiedOperators"
    \ , "-XExplicitForALl"
    \ , "-XNoExplicitForAll"
    \ , "-XPolymorphicComponents"
    \ , "-XNoPolymorphicComponents"
    \ , "-XRank2Types"
    \ , "-XNoRank2Types"
    \ , "-XRankNTypes"
    \ , "-XNoRankNTypes"
    \ , "-XImpredicativeTypes"
    \ , "-XNoImpredicativeTypes"
    \ , "-XExistentialQuantification"
    \ , "-XNoExistentialQuantification"
    \ , "-XKindSignatures"
    \ , "-XNoKindSignatures"
    \ , "-XEmptyDataDecls"
    \ , "-XNoEmptyDataDecls"
    \ , "-XParallelListComp"
    \ , "-XNoParallelListComp"
    \ , "-XTransformListComp"
    \ , "-XNoTransformListComp"
    \ , "-XUnliftedFFITypes"
    \ , "-XNoUnliftedFFITypes"
    \ , "-XLiberalTypeSynonyms"
    \ , "-XNoLiberalTypeSynonyms"
    \ , "-XTypeOperators"
    \ , "-XNoTypeOperators"
    \ , "-XDoRec"
    \ , "-XNoDoRec"
    \ , "-XRecursiveDo"
    \ , "-XNoRecursiveDo"
    \ , "-XPArr"
    \ , "-XNoPArr"
    \ , "-XRecordWildCards"
    \ , "-XNoRecordWildCards"
    \ , "-XNamedFieldPuns"
    \ , "-XNoNamedFieldPuns"
    \ , "-XDisambiguateRecordFields"
    \ , "-XNoDisambiguateRecordFields"
    \ , "-XUnboxedTuples"
    \ , "-XNoUnboxedTuples"
    \ , "-XStandaloneDeriving"
    \ , "-XNoStandaloneDeriving"
    \ , "-XDeriveDataTypeable"
    \ , "-XNoDeriveDataTypeable"
    \ , "-XGeneralizedNewtypeDeriving"
    \ , "-XNoGeneralizedNewtypeDeriving"
    \ , "-XTypeSynonymInstances"
    \ , "-XNoTypeSynonymInstances"
    \ , "-XFlexibleContexts"
    \ , "-XNoFlexibleContexts"
    \ , "-XFlexibleInstances"
    \ , "-XNoFlexibleInstances"
    \ , "-XConstrainedClassMethods"
    \ , "-XNoConstrainedClassMethods"
    \ , "-XMultiParamTypeClasses"
    \ , "-XNoMultiParamTypeClasses"
    \ , "-XFunctionalDependencies"
    \ , "-XNoFunctionalDependencies"
    \ , "-XPackageImports"
    \ , "-XNoPackageImports"
    \ , "-W"
    \ , "-w"
    \ , "-w"
    \ , "-Wall"
    \ , "-w"
    \ , "-Werror"
    \ , "-Wwarn"
    \ , "-Wwarn"
    \ , "-Werror"
    \ , "-fwarn-unrecognised-pragmas"
    \ , "-fno-warn-unrecognised-pragmas"
    \ , "-fwarn-warnings-deprecations"
    \ , "-fno-warn-warnings-deprecations"
    \ , "-fwarn-deprecated-flags"
    \ , "-fno-warn-deprecated-flags"
    \ , "-fwarn-duplicate-exports"
    \ , "-fno-warn-duplicate-exports"
    \ , "-fwarn-hi-shadowing"
    \ , "-fno-warn-hi-shadowing"
    \ , "-fwarn-implicit-prelude"
    \ , "-fno-warn-implicit-prelude"
    \ , "-fwarn-incomplete-patterns"
    \ , "-fno-warn-incomplete-patterns"
    \ , "-fwarn-incomplete-record-updates"
    \ , "-fno-warn-incomplete-record-updates"
    \ , "-fwarn-lazy-unlifted-bindings"
    \ , "-fno-warn-lazy-unlifted-bindings"
    \ , "-fwarn-missing-fields"
    \ , "-fno-warn-missing-fields"
    \ , "-fwarn-missing-import-lists"
    \ , "-fnowarn-missing-import-lists"
    \ , "-fwarn-missing-methods"
    \ , "-fno-warn-missing-methods"
    \ , "-fwarn-missing-signatures"
    \ , "-fno-warn-missing-signatures"
    \ , "-fwarn-name-shadowing"
    \ , "-fno-warn-name-shadowing"
    \ , "-fwarn-orphans"
    \ , "-fno-warn-orphans"
    \ , "-fwarn-overlapping-patterns"
    \ , "-fno-warn-overlapping-patterns"
    \ , "-fwarn-tabs"
    \ , "-fno-warn-tabs"
    \ , "-fwarn-type-defaults"
    \ , "-fno-warn-type-defaults"
    \ , "-fwarn-monomorphism-restriction"
    \ , "-fno-warn-monomorphism-restriction"
    \ , "-fwarn-unused-binds"
    \ , "-fno-warn-unused-binds"
    \ , "-fwarn-unused-imports"
    \ , "-fno-warn-unused-imports"
    \ , "-fwarn-unused-matches"
    \ , "-fno-warn-unused-matches"
    \ , "-fwarn-unused-do-bind"
    \ , "-fno-warn-unused-do-bind"
    \ , "-fwarn-wrong-do-bind"
    \ , "-fno-warn-wrong-do-bind"
    \ , "-O"
    \ , "-O0"
    \ , "-On"
    \ , "-O0"
    \ , "-fcase-merge"
    \ , "-fno-case-merge"
    \ , "-fmethod-sharing"
    \ , "-fno-method-sharing"
    \ , "-fdo-eta-reduction"
    \ , "-fno-do-eta-reduction"
    \ , "-fdo-lambda-eta-expansion"
    \ , "-fno-do-lambda-eta-expansion"
    \ , "-fexcess-precision"
    \ , "-fno-excess-precision"
    \ , "-fignore-asserts"
    \ , "-fno-ignore-asserts"
    \ , "-fignore-interface-pragmas"
    \ , "-fno-ignore-interface-pragmas"
    \ , "-fomit-interface-pragmas"
    \ , "-fno-omit-interface-pragmas"
    \ , "-fsimplifier-phases"
    \ , "-fmax-simplifier-iterations"
    \ , "-fcse"
    \ , "-fno-cse"
    \ , "-fspecialise"
    \ , "-fno-specialise"
    \ , "-ffull-laziness"
    \ , "-fno-full-laziness"
    \ , "-ffloat-in"
    \ , "-fno-float-in"
    \ , "-fenable-rewrite-rules"
    \ , "-fno-enable-rewrite-rules"
    \ , "-fstrictness"
    \ , "-fno-strictness"
    \ , "-fstrictness=before=n"
    \ , "-fspec-constr"
    \ , "-fno-spec-constr"
    \ , "-fliberate-case"
    \ , "-fno-liberate-case"
    \ , "-fstatic-argument-transformation"
    \ , "-fno-static-argument-transformation"
    \ , "-funbox-strict-fields"
    \ , "-fno-unbox-strict-fields"
    \ , "-feager-blackholing"
    \ , "-auto"
    \ , "-no-auto"
    \ , "-auto-all"
    \ , "-no-auto-all"
    \ , "-caf-all"
    \ , "-no-caf-all"
    \ , "-hpcdir"
    \ , "-F"
    \ , "-cpp"
    \ , "-Dsymbol[=value]"
    \ , "-Usymbol"
    \ , "-Usymbol"
    \ , "-Idir"
    \ , "-fasm"
    \ , "-fvia-C"
    \ , "-fvia-C"
    \ , "-fasm"
    \ , "-fllvm"
    \ , "-fasm"
    \ , "-fno-code"
    \ , "-fbyte-code"
    \ , "-fobject-code"
    \ , "-shared"
    \ , "-dynamic"
    \ , "-framework"
    \ , "-framework-path"
    \ , "-llib"
    \ , "-Ldir"
    \ , "-main-is"
    \ , "--mk-dll"
    \ , "-no-hs-main"
    \ , "-rtsopts,"
    \ , "-with-rtsopts=opts"
    \ , "-no-link"
    \ , "-split-objs"
    \ , "-fno-gen-manifest"
    \ , "-fno-embed-manifest"
    \ , "-fno-shared-implib"
    \ , "-dylib-install-name"
    \ , "-pgmL"
    \ , "-pgmP"
    \ , "-pgmc"
    \ , "-pgmm"
    \ , "-pgms"
    \ , "-pgma"
    \ , "-pgml"
    \ , "-pgmdll"
    \ , "-pgmF"
    \ , "-pgmwindres"
    \ , "-optL"
    \ , "-optP"
    \ , "-optF"
    \ , "-optc"
    \ , "-optlo"
    \ , "-optlc"
    \ , "-optm"
    \ , "-opta"
    \ , "-optl"
    \ , "-optdll"
    \ , "-optwindres"
    \ , "-msse2"
    \ , "-monly-[432]-regs"
    \ , "-fext-core"
    \ , "-dcore-lint"
    \ , "-ddump-asm"
    \ , "-ddump-bcos"
    \ , "-ddump-cmm"
    \ , "-ddump-cpranal"
    \ , "-ddump-cse"
    \ , "-ddump-deriv"
    \ , "-ddump-ds"
    \ , "-ddump-flatC"
    \ , "-ddump-foreign"
    \ , "-ddump-hpc"
    \ , "-ddump-inlinings"
    \ , "-ddump-llvm"
    \ , "-ddump-occur-anal"
    \ , "-ddump-opt-cmm"
    \ , "-ddump-parsed"
    \ , "-ddump-prep"
    \ , "-ddump-rn"
    \ , "-ddump-rules"
    \ , "-ddump-simpl"
    \ , "-ddump-simpl-phases"
    \ , "-ddump-simpl-iterations"
    \ , "-ddump-spec"
    \ , "-ddump-splices"
    \ , "-ddump-stg"
    \ , "-ddump-stranal"
    \ , "-ddump-tc"
    \ , "-ddump-types"
    \ , "-ddump-worker-wrapper"
    \ , "-ddump-if-trace"
    \ , "-ddump-tc-trace"
    \ , "-ddump-rn-trace"
    \ , "-ddump-rn-stats"
    \ , "-ddump-simpl-stats"
    \ , "-dsource-stats"
    \ , "-dcmm-lint"
    \ , "-dstg-lint"
    \ , "-dstg-stats"
    \ , "-dverbose-core2core"
    \ , "-dverbose-stg2stg"
    \ , "-dshow-passes"
    \ , "-dfaststring-stats"
    \ , "-fno-asm-mangling"
    \ , "-fno-ghci-sandbox"
    \ ]
